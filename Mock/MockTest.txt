1. Java is a object-oriented programming language.
   Java is developed by Sun-MicroSystem in 1995.
   Earlier name of java is oak later it is named as java.
   firstly delvelopers want to develop a setUpBox, and the team called as "greenteam".
   java is write once and run anywhere.

  
   javac : it is used for compilation of program.
   syntax:javac (filename.java extension).

2. JDk: java development kit
   JRE: java Runtime environment.
   JVM: java virtual machine.


3. Java file : in the java file it has code written in  a file.
   Class file: in the class file it has bytecode.
   
4.notpad++
  eclipse

5. Variable: variable is a container which holds values.
   syntax: datatype variablename;
   example: int sum;
   types of variables:
   1.Local variables: In the local variable the variable declared inside the body of method is called          local variable.
   2.instance variables: the variables are declared inside the class is called instance variables.
   3.static variables: static variables are declared using static keyword.


6. Everything in java is object.
   create a objects and then run the programs in java.

7. output: it executed but no printing statements. 

8. Datatype: DataType has different size assigned to a variables.
  In the datatypes there are 2 types:
  Primitive and non-primtive datatypes
   predefined datatypes: int,char,boolean,float,long,double,short,byte
    int size:4 bytes  
    it holds integer values
   ex: int num=10;


   char size: 2 bytes
   it holds  single characters, represented in single quotes.
   ex: char alpha='a';

   short size: 2 bytes   
   it holds number values
   ex: short num=2;

   booleansize: 1 bit 
   it checks either true or false.
   ex: boolean isLaptop;


   float size: 4 bytes 
   it holds decimal values.
  ex: float num=1.5f;


   byte size: 1 byte
   it holds numbers.
  ex: byte height;


   long size: 8 bytes
 ex: long carPrice;


   double size: 8 bytes
   ex: double weight;

 
9. Dot operator is used to access the class properties(constructors,methods)
    ex: public class Mobile{
    int price;
    Mobile(int price){
    this.price=price;
}
}																								  

 10.  Java includes some features:
   simple: syntax  it is very easy to understand.
   Robust: used for memory management.
   platform-independent: java is write once and run anywhere includes windows,mac os.
   object-oriented: everything in java is object-orinted it includes states and behaviours.
   portable
   security


11. Array is a collection of elements of similar dataTypes.
    Array is represented in SquareBrackets[]
    Array is alloacted in rows and columns.
    Array is accessed by index number and index startes from 0 to 9.
    Types of Array:
    1. single-dimensional array.
    2. multiple-dimensional array.

    ex: public class Day{
      int[] num={1,2,5,7};
      void numbers(){
      for(int i=0;i<num.length;i++){
    System.out.println(num);
       
 
      public static void main(String[] args){
      System.out.println(num.i[2]);
}
}


12. Class: class is a blueprint for the objects.
     Objects: objects is a real-time entity, it has states and behaviour, everything in java is objects.
     for example: Dog -> color,name,tail }states
                      -> bark }behaviour.
     public class Animal{
   String dogName;
   String color;
   Animal(String dogName, String color){
  this.dogName=dogName;
   this.color=color;
}
  public static void main(String[] args){

 System.out.println(dogName);
 System.out.println(color);
}
}

 

13. keywords are reserved.
    String,final,try,catch,int,static, void,if,switch,for

     example: public class Student{
     String name;
     String course;
     int regno;
    Student(String name,String course, int phno){
   this.name=name;
   this.course=course;
   this.regno=regno;
}
  public static void main(String[] args)
{
 Student obj=new Student("sonu","BCA",10);
 System.out.println(obj.name);
 System.out.println(obj.course); 
 System.out.println(obj.regno);
}
}


 14. Constructor:  Constructor is a block of code, whenever it is executed objects is created. 
                   Constructor name is same has class name.
                   there is no return type.

            types of Constructors:
            1. default constructor: in the default constructor no parameter is passed.
               ex: public class Employee{
                   String name;
                 Employee()  -> default constructor



            2. parametrized constructor: in the parametrized constructor parameter is passed in the constructor
                ex: public class Employee{
                    String name;
                 Employee(String name)  -> parametrized constructor.  
		this.name=name;

     Constructor chaining: calling constructor within another constructor is called Constructor chaining.
               ex:  public class Bus{
                 int busNo;
                 String color;
                 String busType;
                
                Bus(int busNo,String color, String busType){
                this(busNo,color);
                 this.busType=busType;}
     		   
 		Bus(int busNO,String color){
                this(busNo);
                 this.color=color;}

		Bus(int busNo){
                this.busNo=busNo;
}
}


 15. method is a  block of code, it allows the instructions to perform specific task.
     syntax: public void methodname()
      
          types of methods:
      static method: static is a keyword.
                      declared  static variables are initialized in static block. 
                  ex: public class Exampple{
                      static int empid;  
                  static(){
                  empid=10;
		}


16. public class Number{
    int[] arr;
      void array(){
      for(int i=0;i<arr.length;i++){
       System.out.println(arr);
}
public static void main(String[] args)
{
 arr obj=new arr{12,3,2,45,6,7,8};
  System.out.println(arr.i[5]);
}
}
    


17.method overloading: having same method name but different parameters is known as method overloading.
 
     

       



     


 
                   




                   
 
 



    



 
       






   																																																																																																																	
 


   



   


   





   
   